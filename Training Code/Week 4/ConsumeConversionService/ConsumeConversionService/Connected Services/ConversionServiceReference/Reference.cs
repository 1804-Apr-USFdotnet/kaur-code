//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsumeConversionService.ConversionServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConversionServiceReference.IConversion")]
    public interface IConversion {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversion/ConvertUSDToINR", ReplyAction="http://tempuri.org/IConversion/ConvertUSDToINRResponse")]
        decimal ConvertUSDToINR(int units, decimal currentRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversion/ConvertUSDToINR", ReplyAction="http://tempuri.org/IConversion/ConvertUSDToINRResponse")]
        System.Threading.Tasks.Task<decimal> ConvertUSDToINRAsync(int units, decimal currentRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversion/ConvertINRToUSD", ReplyAction="http://tempuri.org/IConversion/ConvertINRToUSDResponse")]
        decimal ConvertINRToUSD(int units, decimal currentRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversion/ConvertINRToUSD", ReplyAction="http://tempuri.org/IConversion/ConvertINRToUSDResponse")]
        System.Threading.Tasks.Task<decimal> ConvertINRToUSDAsync(int units, decimal currentRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversion/ConvertCelciusToFahrenheit", ReplyAction="http://tempuri.org/IConversion/ConvertCelciusToFahrenheitResponse")]
        decimal ConvertCelciusToFahrenheit(decimal celcius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversion/ConvertCelciusToFahrenheit", ReplyAction="http://tempuri.org/IConversion/ConvertCelciusToFahrenheitResponse")]
        System.Threading.Tasks.Task<decimal> ConvertCelciusToFahrenheitAsync(decimal celcius);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConversionChannel : ConsumeConversionService.ConversionServiceReference.IConversion, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConversionClient : System.ServiceModel.ClientBase<ConsumeConversionService.ConversionServiceReference.IConversion>, ConsumeConversionService.ConversionServiceReference.IConversion {
        
        public ConversionClient() {
        }
        
        public ConversionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConversionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConversionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConversionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public decimal ConvertUSDToINR(int units, decimal currentRate) {
            return base.Channel.ConvertUSDToINR(units, currentRate);
        }
        
        public System.Threading.Tasks.Task<decimal> ConvertUSDToINRAsync(int units, decimal currentRate) {
            return base.Channel.ConvertUSDToINRAsync(units, currentRate);
        }
        
        public decimal ConvertINRToUSD(int units, decimal currentRate) {
            return base.Channel.ConvertINRToUSD(units, currentRate);
        }
        
        public System.Threading.Tasks.Task<decimal> ConvertINRToUSDAsync(int units, decimal currentRate) {
            return base.Channel.ConvertINRToUSDAsync(units, currentRate);
        }
        
        public decimal ConvertCelciusToFahrenheit(decimal celcius) {
            return base.Channel.ConvertCelciusToFahrenheit(celcius);
        }
        
        public System.Threading.Tasks.Task<decimal> ConvertCelciusToFahrenheitAsync(decimal celcius) {
            return base.Channel.ConvertCelciusToFahrenheitAsync(celcius);
        }
    }
}
